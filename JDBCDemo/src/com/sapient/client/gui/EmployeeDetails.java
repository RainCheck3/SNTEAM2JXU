/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.sapient.client.gui;

import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JOptionPane;

import oracle.jdbc.driver.OracleDriver;

/**
 * 
 * @author jxu1
 */
public class EmployeeDetails extends javax.swing.JFrame {
	private ResultSet result = null;

	/**
	 * Creates new form EmployeeDetails
	 */
	public EmployeeDetails() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		lblEmployeeID = new javax.swing.JLabel();
		lblFirstName = new javax.swing.JLabel();
		lblLastName = new javax.swing.JLabel();
		lblSalary = new javax.swing.JLabel();
		txtEmployeeID = new javax.swing.JTextField();
		txtFirstName = new javax.swing.JTextField();
		txtLastName = new javax.swing.JTextField();
		txtSalary = new javax.swing.JTextField();
		btnFindID = new javax.swing.JButton();
		btnInsert = new javax.swing.JButton();
		btnUpdate = new javax.swing.JButton();
		btnDelete = new javax.swing.JButton();
		btnExit = new javax.swing.JButton();
		btnFindBySalary = new javax.swing.JButton();
		btnPrevious = new javax.swing.JButton();
		btnNext = new javax.swing.JButton();
		btnCall = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		lblEmployeeID.setText("Employee ID");

		lblFirstName.setText("First Name");

		lblLastName.setText("Last Name");

		lblSalary.setText("Salary");

		btnFindID.setText("Find by ID");
		btnFindID.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFindIDActionPerformed(evt);
			}
		});

		btnInsert.setText("Add");
		btnInsert.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnInsertActionPerformed(evt);
			}
		});

		btnUpdate.setText("Modify");
		btnUpdate.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnUpdateActionPerformed(evt);
			}
		});

		btnDelete.setText("Remove");
		btnDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDeleteActionPerformed(evt);
			}
		});

		btnExit.setText("Exit");
		btnExit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnExitActionPerformed(evt);
			}
		});

		btnFindBySalary.setText("Find by Salary");
		btnFindBySalary.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFindBySalaryActionPerformed(evt);
			}
		});

		btnPrevious.setText("Previous");
		btnPrevious.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnPreviousActionPerformed(evt);
			}
		});

		btnNext.setText("Next");
		btnNext.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNextActionPerformed(evt);
			}
		});

		btnCall.setText("Call");
		btnCall.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCallActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(21, 21, 21)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
																.addComponent(
																		lblFirstName)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						lblSalary)
																				.addComponent(
																						lblLastName)))
												.addComponent(lblEmployeeID))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										149, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														txtEmployeeID,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														176,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
																.addComponent(
																		txtLastName,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		176,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(
																		txtFirstName,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		176,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addComponent(
														txtSalary,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														176,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(66, 66, 66))
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(btnFindBySalary)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(btnFindID,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										101,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(btnInsert)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(btnUpdate)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(btnDelete)
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE))
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		btnCall)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		btnExit)
																.addContainerGap())
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addGap(0,
																		0,
																		Short.MAX_VALUE)
																.addComponent(
																		btnPrevious)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		btnNext)
																.addGap(86, 86,
																		86)))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(44, 44, 44)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(lblEmployeeID)
												.addComponent(
														txtEmployeeID,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(lblFirstName)
												.addComponent(
														txtFirstName,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(lblLastName)
												.addComponent(
														txtLastName,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(lblSalary)
												.addComponent(
														txtSalary,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnPrevious)
												.addComponent(btnNext))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnDelete)
												.addComponent(btnUpdate)
												.addComponent(btnInsert)
												.addComponent(btnFindID)
												.addComponent(btnFindBySalary))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										13, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnExit)
												.addComponent(btnCall))
								.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnFindBySalaryActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFindBySalaryActionPerformed
		Connection dbConnection = null;
		PreparedStatement pStatement = null;

		try {
			// Load Driver
			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());

			// Establish Connection
			dbConnection = DriverManager.getConnection(
					"jdbc:oracle:thin:@deltahiti31202:1521:XE", "Jiaju",
					"hunter2");
			// Execute Query
			pStatement = dbConnection
					.prepareStatement("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES WHERE SALARY=?", ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
			
			pStatement.setInt(1, Integer.parseInt(txtSalary.getText()));

			this.result = pStatement.executeQuery();

			if (this.result.next()) {
				txtEmployeeID.setText(this.result.getString(1));
				txtFirstName.setText(this.result.getString(2));
				txtLastName.setText(this.result.getString(3));
			} else {
				JOptionPane.showMessageDialog(this,
						"No employee with this salary", "No Record found",
						JOptionPane.ERROR_MESSAGE);
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}// GEN-LAST:event_btnFindBySalaryActionPerformed

	private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnPreviousActionPerformed
		try {
			if (this.result.previous()) {
				txtEmployeeID.setText(this.result.getString(1));
				txtFirstName.setText(this.result.getString(2));
				txtLastName.setText(this.result.getString(3));
			}else {
				this.result.next();
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}// GEN-LAST:event_btnPreviousActionPerformed

	private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNextActionPerformed
		try {
			if (this.result.next()) {
				txtEmployeeID.setText(this.result.getString(1));
				txtFirstName.setText(this.result.getString(2));
				txtLastName.setText(this.result.getString(3));
			} else {
				this.result.previous();
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}// GEN-LAST:event_btnNextActionPerformed

	private void btnCallActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCallActionPerformed
		CallableStatement cStatement = null;
		Connection dbConnection = null;

		try {
			// Load / Register Driver
			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());

			// Establish a connection
			dbConnection = DriverManager.getConnection(
					"jdbc:oracle:thin:@deltahiti31202:1521:XE", "Jiaju",
					"hunter2");

			// Execute call
			cStatement = dbConnection.prepareCall("{call query_emp(?,?,?,?)}");

			// Bind IN parameter first, then bind OUT parameter
			cStatement.setInt(1, Integer.parseInt(txtEmployeeID.getText())); // This
																				// would
																				// set
																				// ID
																				// as
																				// 102

			cStatement.registerOutParameter(2, java.sql.Types.VARCHAR);
			cStatement.registerOutParameter(3, java.sql.Types.DECIMAL);
			cStatement.registerOutParameter(4, java.sql.Types.DECIMAL);

			// Use execute method to run stored procedure
			cStatement.execute();

			// Retrieve employee name with getXXX method
			String empName = cStatement.getString(2);
			BigDecimal empSal = cStatement.getBigDecimal(3);
			BigDecimal empComm = cStatement.getBigDecimal(4);

			System.out.println(empName + ", Salary: " + empSal
					+ ", Commission: " + empComm);

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				if (dbConnection != null && !dbConnection.isClosed()) {
					dbConnection.close();
				}
				if (cStatement != null) {
					cStatement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}

	}// GEN-LAST:event_btnCallActionPerformed

	private void btnFindIDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFindIDActionPerformed
		Connection dbConnection = null;
		PreparedStatement pStatement = null;
		ResultSet resultID = null;

		try {
			// Load / Register Driver
			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());

			// Establish a connection
			dbConnection = DriverManager.getConnection(
					"jdbc:oracle:thin:@deltahiti31202:1521:XE", "Jiaju",
					"hunter2");

			// Execute the query
			pStatement = dbConnection
					.prepareStatement("SELECT FIRST_NAME,LAST_NAME,SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID=?");

			pStatement.setInt(1, Integer.parseInt(txtEmployeeID.getText()));

			resultID = pStatement.executeQuery();

			if (resultID.next()) {
				txtFirstName.setText(resultID.getString(1));
				txtLastName.setText(resultID.getString(2));
				txtSalary.setText(resultID.getString(3));
			} else {
				JOptionPane.showMessageDialog(this,
						"Employee ID does not exist", "No Record found",
						JOptionPane.ERROR_MESSAGE);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				if (dbConnection != null && !dbConnection.isClosed()) {
					dbConnection.close();
				}
				if (pStatement != null) {
					pStatement.close();
				}
				if (resultID != null) {
					resultID.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}

	}// GEN-LAST:event_btnFindIDActionPerformed

	private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnInsertActionPerformed
		Connection dbConnection = null;
		PreparedStatement pStatement = null;
		int result = 0;
		try {
			// Register Driver
			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());

			// Establish Connection
			dbConnection = DriverManager.getConnection(
					"jdbc:oracle:thin:@deltahiti31202:1521:XE", "Jiaju",
					"hunter2");

			// Execute the query
			pStatement = dbConnection
					.prepareStatement("INSERT INTO EMPLOYEES(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY) VALUES (?, ?, ?, ?)");
			pStatement.setInt(1, Integer.parseInt(txtEmployeeID.getText()));
			pStatement.setString(2, txtFirstName.getText());
			pStatement.setString(3, txtLastName.getText());
			pStatement.setDouble(4, Double.parseDouble(txtSalary.getText()));

			result = pStatement.executeUpdate();
			if (result <= 0) {
				JOptionPane.showMessageDialog(this,
						"Employee ID already exists", "Insert failed",
						JOptionPane.ERROR_MESSAGE);
			} else {
				JOptionPane.showMessageDialog(this, result + " rows inserted");
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (dbConnection != null && !dbConnection.isClosed()) {
					dbConnection.close();
				}
				if (pStatement != null) {
					pStatement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}// GEN-LAST:event_btnInsertActionPerformed

	private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnUpdateActionPerformed
		Connection dbConnection = null;
		PreparedStatement pStatement = null;
		int result = 0;

		try {
			// Load Driver
			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());

			// Establish connection
			dbConnection = DriverManager.getConnection(
					"jdbc:oracle:thin:@deltahiti31202:1521:XE", "Jiaju",
					"hunter2");

			// Execute query
			pStatement = dbConnection
					.prepareStatement("UPDATE EMPLOYEES SET EMPLOYEE_ID=?, FIRST_NAME=?, LAST_NAME=?, SALARY=? WHERE EMPLOYEE_ID=?");
			pStatement.setInt(1, Integer.parseInt(txtEmployeeID.getText()));
			pStatement.setString(2, txtFirstName.getText());
			pStatement.setString(3, txtLastName.getText());
			pStatement.setDouble(4, Double.parseDouble(txtSalary.getText()));
			pStatement.setInt(5, Integer.parseInt(txtEmployeeID.getText()));

			result = pStatement.executeUpdate();

			if (result == 0) {
				JOptionPane.showMessageDialog(this,
						"Employee ID does not exist", "Update failed",
						JOptionPane.ERROR_MESSAGE);
			} else {
				JOptionPane.showMessageDialog(this, result + " rows updated");
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				if (dbConnection != null && !dbConnection.isClosed()) {
					dbConnection.close();
				}
				if (pStatement != null) {
					pStatement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}// GEN-LAST:event_btnUpdateActionPerformed

	private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
		Connection dbConnection = null;
		PreparedStatement pStatement = null;
		int result = 0;

		try {
			// Load Driver
			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());

			// Establish connection
			dbConnection = DriverManager.getConnection(
					"jdbc:oracle:thin:@deltahiti31202:1521:XE", "Jiaju",
					"hunter2");

			// Execute query
			pStatement = dbConnection
					.prepareStatement("DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID=?");
			pStatement.setInt(1, Integer.parseInt(txtEmployeeID.getText()));

			result = pStatement.executeUpdate();

			if (result == 0) {
				JOptionPane.showMessageDialog(this,
						"Employee ID does not exist", "Delete failed",
						JOptionPane.ERROR_MESSAGE);
			} else {
				JOptionPane.showMessageDialog(this, result + " rows deleted");
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				if (dbConnection != null && !dbConnection.isClosed()) {
					dbConnection.close();
				}
				if (pStatement != null) {
					pStatement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}// GEN-LAST:event_btnDeleteActionPerformed

	private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnExitActionPerformed
		// TODO add your handling code here:
		System.exit(0);
	}// GEN-LAST:event_btnExitActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(EmployeeDetails.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(EmployeeDetails.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(EmployeeDetails.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(EmployeeDetails.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new EmployeeDetails().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnCall;
	private javax.swing.JButton btnDelete;
	private javax.swing.JButton btnExit;
	private javax.swing.JButton btnFindBySalary;
	private javax.swing.JButton btnFindID;
	private javax.swing.JButton btnInsert;
	private javax.swing.JButton btnNext;
	private javax.swing.JButton btnPrevious;
	private javax.swing.JButton btnUpdate;
	private javax.swing.JLabel lblEmployeeID;
	private javax.swing.JLabel lblFirstName;
	private javax.swing.JLabel lblLastName;
	private javax.swing.JLabel lblSalary;
	private javax.swing.JTextField txtEmployeeID;
	private javax.swing.JTextField txtFirstName;
	private javax.swing.JTextField txtLastName;
	private javax.swing.JTextField txtSalary;
	// End of variables declaration//GEN-END:variables
}
